import java.io.IOException;import java.net.InetSocketAddress;import java.nio.ByteBuffer;import java.nio.CharBuffer;import java.nio.channels.FileChannel;import java.nio.channels.SelectionKey;import java.nio.channels.Selector;import java.nio.channels.SocketChannel;import java.nio.charset.Charset;import java.nio.charset.CharsetDecoder;import java.nio.file.Paths;import java.nio.file.StandardOpenOption;import java.util.Iterator;import java.util.UUID;/** * Created by demopoo on 2017/8/5. */public class MainHttpClient {    public static void main(String[] arg){        try {            for (int i = 0;i<2;i++){                new Thread(new Runnable() {                    public void run() {                        ByteBuffer bf = ByteBuffer.allocate(1500);                        try{                            FileChannel fileChannel = FileChannel.open(Paths.get("/Users/demopoo/Desktop/big.png"),StandardOpenOption.READ);                            long tlen = fileChannel.size();                            SocketChannel socketChannel = SocketChannel.open(new InetSocketAddress("127.0.0.1",9898));                            ByteBuffer byteBuffer = ByteBuffer.allocate(1233);                            int len = 0;                            int i = 0;                            while ((len = fileChannel.read(byteBuffer)) != -1){                                prepareMultiPostHeader("big.png",tlen,byteBuffer,bf);                                byteBuffer.clear();                                bf.flip();                                socketChannel.write(bf);                                bf.clear();                            }                            byteBuffer.clear();                            socketChannel.read(byteBuffer);                            byteBuffer.flip();                            System.out.println("客户端收到的数据:\r\n"+new String(byteBuffer.array()));                            if (len == -1){                                fileChannel.close();                                socketChannel.close();                            }                        }catch (IOException exe){                            exe.printStackTrace();                        }                    }                }).start();            }        }catch (Exception ex){            ex.printStackTrace();        }finally {        }    }    /**     * 构建http 请求报文     * @param fileName 上传附件名称     * @param len 附件总长度     * @return     */    public static ByteBuffer prepareMultiPostHeader(String fileName,long len,ByteBuffer byteBuffer,ByteBuffer bf){        long systemCurrentMilis = System.currentTimeMillis();        StringBuffer stringBuffer = new StringBuffer();        stringBuffer.append("POST / HTTP/1.1").append("\r\n");        stringBuffer.append("Accept-Language").append(": ").append("zh-cn").append("\r\n");        stringBuffer.append("Content-Type:multipart/form-data;boundary=-----------------------------7d").append(systemCurrentMilis).append("\r\n");        stringBuffer.append("Content-Length").append(": ").append(len).append("\r\n");//\r\n        stringBuffer.append("-------------------------------7d").append(systemCurrentMilis).append("\r\n");        stringBuffer.append("Content-Disposition: form-data; name=\"file\"; filename=\"big.png\"").append("\r\n\r\n");        bf.put(stringBuffer.toString().getBytes());        bf.put(byteBuffer.array());//        bf.put(("-------------------------------7d"+systemCurrentMilis+"--").getBytes());        return bf;    }}